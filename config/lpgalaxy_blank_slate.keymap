/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define TBLE_ORTHO   1
// #define TBLE_MIT     1
// #define TBLE_DUAL_2U 1

#define NAV_L 1
#define NUM_L 2
#define SYM_L 3
#define MM_L 4 // MultiMedia and Misc
#define FN_L 5 // Function

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

&mt { tapping-term-ms = <400>; };

#define BT(n) BT_SEL n

/ {
    chosen {
       zmk,matrix_transform =
#ifdef TBLE_DUAL_2U
                       &dual_2u_transform;
#elif defined(TBLE_MIT)
                       &mit_transform;
#else
                       &ortho_transform;
#endif
    };

    macros {
      ZMK_MACRO(thumbs_up,
		wait-ms = <1>;
		tap-ms = <5>;
                bindings = <&kp PLUS &kp COLON &kp PLUS &kp N1 &kp COLON &kp RET>;
		)
    };
    
    tap_dances {
    	shifty: shift_caps_word {
		compatible = "zmk,behavior-tap-dance";
		label = "TD_SHIFTY";
		#binding-cells = <0>;
		tapping-term-ms = <150>;
		bindings = <&kp LSHFT>, <&caps_word>;
	};
    };

// Conditional layer only when we have less thumb keys
#ifdef TBLE_DUAL_2U
    cond_layers {
        compatible = "zmk,conditional-layers";
	tri {
	    if-layers = <NUM_L NAV_L>;
	    then-layer = <SYM_L>;
        };
    };
#endif

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
 &lt MM_L ESC     &kp Q      &kp W      &kp F       &kp P               &kp G             &kp J            &kp L          &kp U       &kp Y      &kp SEMI      &kp BKSP
 &mt LCTRL TAB    &kp A      &kp R      &kp S       &kp T               &mt LCTRL D       &kp H            &kp N          &kp E       &kp I      &kp O         &kp RET
 &kp LSHFT        &kp Z      &kp X      &kp C       &kp V               &kp B             &kp K            &kp M          &kp COMMA   &kp DOT    &kp FSLH      &kp SQT
 &mt LSTRL GRAVE  &mo LALT   &kp LCMD   &mo SYM_L   &lt NUM_L TILDE     &lt NAV_L ESC     &kp SPACE        &kp RSHFT      &trans      &mo FN_L   &kp RALT      &mt RCTRL MINUS
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
&trans     &trans     &trans     &trans      &trans          &trans       &trans     &trans         &trans      &kp UP     &trans     &kp DEL
&trans     &trans     &trans     &trans      &trans          &trans       &kp HOME   &kp PG_UP      &kp LEFT    &kp DOWN   &kp RIGHT  &trans
&trans     &trans     &trans     &trans      &trans          &trans       &kp END    &kp PG_DN      &trans      &trans     &trans     &trans
&trans     &trans     &trans     &trans      &trans          &trans       &trans     &trans         &trans      &trans     &trans     &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
&trans     &trans     &trans     &trans      &trans    &trans        &trans        &kp N7     &kp N8      &kp N9       &kp RS(X)  &kp BKSP
&trans     &trans     &trans     &trans      &trans    &trans        &kp LBKT      &kp N4     &kp N5      &kp N6       &kp DOT    &trans
&trans     &trans     &trans     &trans      &trans    &trans        &kp RBKT      &kp N1     &kp N2      &kp N3       &kp FSLH   &trans
&trans     &trans     &trans     &trans      &trans    &trans        &kp EQUAL     &kp N0     &trans      &trans       &trans     &trans
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
&trans     &trans     &trans     &trans      &trans    &trans        &trans        &kp AMPS   &kp STAR    &kp LPAR     &kp RPAR   &kp BKSP
&trans     &trans     &trans     &trans      &trans    &trans        &kp LBRC      &kp DLLR   &kp PRCNT   &kp CARET    &trans     &trans
&trans     &trans     &trans     &trans      &trans    &trans        &kp RBRC      &kp EXCL   &kp AT      &kp POUND    &kp PIPE   &trans
&trans     &trans     &trans     &trans      &trans    &trans        &kp PLUS      &kp RPAR   &trans      &trans       &trans     &trans
            >;
        };

        mm_layer {
            label = "Misc";
            bindings = <
&trans     &bt BT_CLR  &out OUT_TOG   &out OUT_BLE  &out OUT_USB    &trans        &trans      &bt BT(0)      &bt BT(1)      &bt BT(2)    &bt BT(3)  &bt BT(4)
&trans     &trans      &trans         &trans        &trans          &trans        &trans      &kp K_VOL_DN   &kp K_VOL_UP   &trans       &trans     &trans
&trans     &trans      &trans         &trans        &trans          &trans        &trans      &kp K_MUTE     &trans         &trans       &trans     &trans
&trans     &trans      &trans         &trans        &trans          &trans        &trans      &trans         &trans         &trans       &trans     &trans
            >;
        };

        fn_layer {
            label = "Func";
            bindings = <
&kp F1     &kp F2      &kp F3     &kp F4      &kp F5    &kp F6        &kp F7        &kp F8         &kp F9         &kp F10      &kp F11    &kp F12
&kp F13    &kp F14     &kp F15    &kp F16     &kp F17   &kp F18       &kp F19       &kp F20        &kp F21        &kp F22      &kp F23    &kp F24
&trans     &trans      &trans     &trans      &trans    &trans        &trans        &trans         &trans         &trans       &trans     &trans
&trans     &trans      &trans     &trans      &trans    &trans        &trans        &trans         &trans         &trans       &trans     &trans
            >;
        };
    };
};

